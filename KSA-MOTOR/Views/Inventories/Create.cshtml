@model BusinessLayer.PartsInventory

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Care-n-repair</h2>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/chosen.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/chosen.jquery.min.js"></script>
@using (Html.BeginForm("Create", "Inventories", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3 style="text-align:center ; color:forestgreen">Add New Parts to Inventory</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CarMfgID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarMfgID, new { htmlAttributes = new { @class = "form-control", style = " border-color:purple" } })
            @Html.ValidationMessageFor(model => model.CarMfgID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = " border-color:purple" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Picture" class="form-control" style=" border-color:purple" />

            @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = " border-color:yellow" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", style = " border-color:purple" } })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fitment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.Fitment, new { htmlAttributes = new { @class = "form-control", style = " border-color:yellow" } })
            @Html.ValidationMessageFor(model => model.Fitment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedVehicles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedVehicles, Model.GetVehivclesList.Select(x => new SelectListItem
            {
                Text = x.Make,
           Value = x.Id.ToString()
            }), "Select Vehicle", new { @class = "form-control chosen-select", @multipleclass = "chosen-select", @multiple = true, id = "DDL", style = " border-color:yellow" })



        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CostPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control", style = " border-color:yellow" } })
            @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control", style = " border-color:yellow" } })
            @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", style = " border-color:yellow" } })
            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Approved, new List<SelectListItem>
{
      new SelectListItem { Text = "NO", Value = "0"},
      new SelectListItem { Text = "YES", Value = "1"},

}, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" style="border-color:yellow" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $('#DDL').chosen();
</script>
@section Scripts {

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/chosen.jquery.min.js"></script>
}
